name: CI

on:
  push:
    branches: [ master ]
    paths:
      - 'barsdiary/**'
      - '.flake8'
      - '.github/workflows/ci.yml'
      - 'pyproject.toml'
  pull_request:
    branches: [ master ]
    paths:
      - 'barsdiary/**'
      - '.flake8'
      - '.github/workflows/ci.yml'
      - 'pyproject.toml'

jobs:
  full-testing:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.11'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade/install pip and poetry
        run: python -m pip install --upgrade pip poetry

      - name: Install dependencies
        run: poetry install

      # formatters
      - name: Run black
        run: poetry run black barsdiary --check

      - name: Run isort
        run: poetry run isort barsdiary --check

      # linters
      - name: Run flake8
        run: poetry run flake8

      - name: Run mypy
        run: poetry run mypy barsdiary

      # tests
      - name: Run pytest
        run: poetry run pytest

  testing:
    needs: [full-testing]
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.8
          - 3.9
          - '3.10'
          - '3.11'
        exclude:
          # this OS and Python were used in full-testing job.
          - os: ubuntu-latest
            python-version: '3.11'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade/install pip and poetry
        run: python -m pip install --upgrade pip poetry

      - name: Install dependencies
        run: poetry install

      # no formatters and linters

      # tests
      - name: Run pytest
        run: poetry run pytest
